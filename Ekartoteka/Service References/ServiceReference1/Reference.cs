//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ekartoteka.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfEkartoteka")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lekarz", Namespace="http://schemas.datacontract.org/2004/07/WcfEkartoteka")]
    [System.SerializableAttribute()]
    public partial class Lekarz : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HasloField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NazwiskoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Haslo {
            get {
                return this.HasloField;
            }
            set {
                if ((object.ReferenceEquals(this.HasloField, value) != true)) {
                    this.HasloField = value;
                    this.RaisePropertyChanged("Haslo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Imie {
            get {
                return this.ImieField;
            }
            set {
                if ((object.ReferenceEquals(this.ImieField, value) != true)) {
                    this.ImieField = value;
                    this.RaisePropertyChanged("Imie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nazwisko {
            get {
                return this.NazwiskoField;
            }
            set {
                if ((object.ReferenceEquals(this.NazwiskoField, value) != true)) {
                    this.NazwiskoField = value;
                    this.RaisePropertyChanged("Nazwisko");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pacjent", Namespace="http://schemas.datacontract.org/2004/07/WcfEkartoteka")]
    [System.SerializableAttribute()]
    public partial class Pacjent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlergieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataUrodzeniaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NazwiskoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PESELField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UwagiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZajetyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alergie {
            get {
                return this.AlergieField;
            }
            set {
                if ((object.ReferenceEquals(this.AlergieField, value) != true)) {
                    this.AlergieField = value;
                    this.RaisePropertyChanged("Alergie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataUrodzenia {
            get {
                return this.DataUrodzeniaField;
            }
            set {
                if ((this.DataUrodzeniaField.Equals(value) != true)) {
                    this.DataUrodzeniaField = value;
                    this.RaisePropertyChanged("DataUrodzenia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Imie {
            get {
                return this.ImieField;
            }
            set {
                if ((object.ReferenceEquals(this.ImieField, value) != true)) {
                    this.ImieField = value;
                    this.RaisePropertyChanged("Imie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nazwisko {
            get {
                return this.NazwiskoField;
            }
            set {
                if ((object.ReferenceEquals(this.NazwiskoField, value) != true)) {
                    this.NazwiskoField = value;
                    this.RaisePropertyChanged("Nazwisko");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PESEL {
            get {
                return this.PESELField;
            }
            set {
                if ((object.ReferenceEquals(this.PESELField, value) != true)) {
                    this.PESELField = value;
                    this.RaisePropertyChanged("PESEL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uwagi {
            get {
                return this.UwagiField;
            }
            set {
                if ((object.ReferenceEquals(this.UwagiField, value) != true)) {
                    this.UwagiField = value;
                    this.RaisePropertyChanged("Uwagi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zajety {
            get {
                return this.ZajetyField;
            }
            set {
                if ((object.ReferenceEquals(this.ZajetyField, value) != true)) {
                    this.ZajetyField = value;
                    this.RaisePropertyChanged("Zajety");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Ekartoteka.ServiceReference1.CompositeType GetDataUsingDataContract(Ekartoteka.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Ekartoteka.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(Ekartoteka.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogIn", ReplyAction="http://tempuri.org/IService1/LogInResponse")]
        Ekartoteka.ServiceReference1.Lekarz LogIn([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LogIn", ReplyAction="http://tempuri.org/IService1/LogInResponse")]
        System.Threading.Tasks.Task<Ekartoteka.ServiceReference1.Lekarz> LogInAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DownloadPatientList", ReplyAction="http://tempuri.org/IService1/DownloadPatientListResponse")]
        System.Collections.Generic.List<Ekartoteka.ServiceReference1.Pacjent> DownloadPatientList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DownloadPatientList", ReplyAction="http://tempuri.org/IService1/DownloadPatientListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Ekartoteka.ServiceReference1.Pacjent>> DownloadPatientListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsBusy", ReplyAction="http://tempuri.org/IService1/IsBusyResponse")]
        int IsBusy(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsBusy", ReplyAction="http://tempuri.org/IService1/IsBusyResponse")]
        System.Threading.Tasks.Task<int> IsBusyAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Busy", ReplyAction="http://tempuri.org/IService1/BusyResponse")]
        void Busy(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Busy", ReplyAction="http://tempuri.org/IService1/BusyResponse")]
        System.Threading.Tasks.Task BusyAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NotBusy", ReplyAction="http://tempuri.org/IService1/NotBusyResponse")]
        void NotBusy(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NotBusy", ReplyAction="http://tempuri.org/IService1/NotBusyResponse")]
        System.Threading.Tasks.Task NotBusyAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Wanted", ReplyAction="http://tempuri.org/IService1/WantedResponse")]
        void Wanted(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Wanted", ReplyAction="http://tempuri.org/IService1/WantedResponse")]
        System.Threading.Tasks.Task WantedAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsWanted", ReplyAction="http://tempuri.org/IService1/IsWantedResponse")]
        int IsWanted(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsWanted", ReplyAction="http://tempuri.org/IService1/IsWantedResponse")]
        System.Threading.Tasks.Task<int> IsWantedAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NotWanted", ReplyAction="http://tempuri.org/IService1/NotWantedResponse")]
        void NotWanted(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NotWanted", ReplyAction="http://tempuri.org/IService1/NotWantedResponse")]
        System.Threading.Tasks.Task NotWantedAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Ekartoteka.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Ekartoteka.ServiceReference1.IService1>, Ekartoteka.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Ekartoteka.ServiceReference1.CompositeType GetDataUsingDataContract(Ekartoteka.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Ekartoteka.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(Ekartoteka.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public Ekartoteka.ServiceReference1.Lekarz LogIn(string login1) {
            return base.Channel.LogIn(login1);
        }
        
        public System.Threading.Tasks.Task<Ekartoteka.ServiceReference1.Lekarz> LogInAsync(string login) {
            return base.Channel.LogInAsync(login);
        }
        
        public System.Collections.Generic.List<Ekartoteka.ServiceReference1.Pacjent> DownloadPatientList() {
            return base.Channel.DownloadPatientList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Ekartoteka.ServiceReference1.Pacjent>> DownloadPatientListAsync() {
            return base.Channel.DownloadPatientListAsync();
        }
        
        public int IsBusy(string id) {
            return base.Channel.IsBusy(id);
        }
        
        public System.Threading.Tasks.Task<int> IsBusyAsync(string id) {
            return base.Channel.IsBusyAsync(id);
        }
        
        public void Busy(string id) {
            base.Channel.Busy(id);
        }
        
        public System.Threading.Tasks.Task BusyAsync(string id) {
            return base.Channel.BusyAsync(id);
        }
        
        public void NotBusy(string id) {
            base.Channel.NotBusy(id);
        }
        
        public System.Threading.Tasks.Task NotBusyAsync(string id) {
            return base.Channel.NotBusyAsync(id);
        }
        
        public void Wanted(string id) {
            base.Channel.Wanted(id);
        }
        
        public System.Threading.Tasks.Task WantedAsync(string id) {
            return base.Channel.WantedAsync(id);
        }
        
        public int IsWanted(string id) {
            return base.Channel.IsWanted(id);
        }
        
        public System.Threading.Tasks.Task<int> IsWantedAsync(string id) {
            return base.Channel.IsWantedAsync(id);
        }
        
        public void NotWanted(string id) {
            base.Channel.NotWanted(id);
        }
        
        public System.Threading.Tasks.Task NotWantedAsync(string id) {
            return base.Channel.NotWantedAsync(id);
        }
    }
}
